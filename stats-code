# visit https://rcompanion.org/handbook/G_09.html for more information
# R version: 4.3-x86_64 (4.3.0)

install.packages("car")
library(car)
install.packages("psych")
library(psych)
install.packages("multcomp")
library(multcomp)
install.packages("emmeans")
library(emmeans)
install.packages("FSA")
library(FSA)
install.packages("ggplot2")
library(ggplot2)
install.packages("phia")
library(phia)
install.packages("multcompView")
library(multcompView)
install.packages("ggpubr")
library(ggpubr)
install.packages("rstatix")
library(rstatix)

# set working directory

# call up data
# 1 week after extraction, hereafter '1 week data'
wk4data_1wk <- read.csv("one-week-week4-germination-rate.csv")
colnames(wk4data_1wk)

# 1 month after extraction, hereafter '1 month data'
wk4data_1mo <- read.csv("one-month-week4-germination-rate.csv")
colnames(wk4data_1mo)


# test for normality: Shapiro-Wilk
# 1 week data (no transformation)
shapiro.test(wk4data_1wk$PercentGerminationWeek4)

# 1 month data
shapiro.test(wk4data_1mo$PercentGerminationWeek4) # not transformed
shapiro.test(wk4data_1mo$invert) # transformed by inversion



# test for normality: Q-Q plot
# 1 week data (no transformation needed)
qqnorm(wk4data_1wk$PercentGerminationWeek4, main = "Normality of week 4 germination rates 1 week after seed extraction")

# 1 month data
qqnorm(wk4data_1mo$PercentGerminationWeek4, main = "Normality of week 4 germination rates 1 week after seed extraction")
qqnorm(wk4data_1mo$invert, main = "Normality of week 4 germination rates 1 month after seed extraction")





# test for equality of variance: Levene's test
# variances are equal if null hypothesis is accepted

library(car)
# 1 week data
leveneTest(wk4data_1wk$PercentGerminationWeek4 ~ wk4data_1wk$ExtractionMethod)
leveneTest(wk4data_1wk$PercentGerminationWeek4 ~ wk4data_1wk$TreatmentMethod)

# 1 month data (transformation needed as shown in next line of code)
leveneTest(wk4data_1mo$PercentGerminationWeek4 ~ wk4data_1mo$ExtractionMethod)
leveneTest(wk4data_1mo$PercentGerminationWeek4 ~ wk4data_1mo$TreatmentMethod)

# 1 month data, transformed
leveneTest(wk4data_1mo$invert ~ wk4data_1mo$ExtractionMethod)
leveneTest(wk4data_1mo$invert ~ wk4data_1mo$TreatmentMethod)



#Two-way AOV, with interaction effect

# Order factor level
# 1 week data
wk4data_1wk$ExtractionMethod = factor(wk4data_1wk$ExtractionMethod, levels=unique(wk4data_1wk$ExtractionMethod))

# 1 month data
wk4data_1mo$ExtractionMethod = factor(wk4data_1mo$ExtractionMethod, levels=unique(wk4data_1mo$ExtractionMethod))



# check for treatment interaction
# 1 week data
interaction.plot(x.factor     = wk4data_1wk$ExtractionMethod,
                 trace.factor = wk4data_1wk$TreatmentMethod,
                 response     = wk4data_1wk$PercentGerminationWeek4,
                 fun = mean,
                 type="b",
                 col=c("darkgray","blue","orange"),  ### Colors for levels of trace var.
                 pch=c(19, 17, 15),             ### Symbols for levels of trace var.
                 fixed=TRUE,                    ### Order by factor order in data
                 leg.bty = "o")


# 1 month data
interaction.plot(x.factor     = wk4data_1mo$ExtractionMethod,
                 trace.factor = wk4data_1mo$TreatmentMethod,
                 response     = wk4data_1mo$invert,
                 fun = mean,
                 type="b",
                 col=c("darkgray","blue","orange"),  ### Colors for levels of trace var.
                 pch=c(19, 17, 15),             ### Symbols for levels of trace var.
                 fixed=TRUE,                    ### Order by factor order in data
                 leg.bty = "o")

# conduct AOV on potential significant main effects and/or interactions
# as indicated from interaction plot
# 1 week data
model_1wk = lm(wk4data_1wk$PercentGerminationWeek4 ~ wk4data_1wk$ExtractionMethod 
           + wk4data_1wk$TreatmentMethod 
           + wk4data_1wk$ExtractionMethod:wk4data_1wk$TreatmentMethod)

# 1 month data
model_1mo = lm(wk4data_1mo$invert ~ wk4data_1mo$ExtractionMethod 
           + wk4data_1mo$TreatmentMethod 
           + wk4data_1mo$ExtractionMethod:wk4data_1mo$TreatmentMethod)

library(car)

# 1 week data
Anova(model_1wk,
      type = "II")

# 1 month data
Anova(model_1mo,
      type = "II")

# Means separation for significant effects
library(emmeans)

# main effect Treatment Method
# 1 week data
marginal_trt_1wk = emmeans(model_1wk,
                   ~ TreatmentMethod)

# 1 month data
marginal_trt_1mo = emmeans(model_1mo,
                   ~ TreatmentMethod)



#interaction effect
# 1 month data
marginal_int_1mo = emmeans(model_1mo,
                    ~ ExtractionMethod:TreatmentMethod)

# 1 week data, treatment effect
pairs(marginal_trt_1wk,
      adjust="tukey")

# 1 month data, treatment effect
pairs(marginal_trt_1mo,
      adjust="tukey")

# 1 month data, interaction effect
pairs(marginal_int_1mo,
      adjust="tukey")



# means separation
library(multcomp)

# 1 week data, treatment
x.a <- cld(marginal_trt_1wk,
    alpha=0.05,
    Letters=letters,      ### Use lower-case letters for .group
    adjust="tukey")       ### Tukey-adjusted comparisons

x.a

# 1 month data, treatment
x.b <- cld(marginal_trt_1mo,
         alpha=0.05,
         Letters=letters,      ### Use lower-case letters for .group
         adjust="tukey")       ### Tukey-adjusted comparisons

x.b


# 1 month data, interaction
x.c <- cld(marginal_int_1mo,
         alpha=0.05,
         Letters=letters,      ### Use lower-case letters for .group
         adjust="tukey")       ### Tukey-adjusted comparisons

x.c




# make bar plots
library(ggpubr)

# 1 week data, main effect extraction method
ggbarplot(data = wk4data_1wk, x = "ExtractionMethod", y = "PercentGerminationWeek4", 
          fill = "lightgray", title = "Germination Rate by Extraction Method in 1-Week Old Seeds", 
          xlab = "Extraction Method", ylab = "Percent", ylim = c(0,100), add = "mean_se", sort.val = "none")

# 1 month data, main effect extraction method, backtransformed
ggbarplot(data = wk4data_1mo, x = "ExtractionMethod", y = "PercentGerminationWeek4", 
          fill = "lightgray", title = "Germination Rate by Extraction Method in 1-Month Old Seeds", 
          xlab = "Extraction Method", ylab = "Percent", ylim = c(0,100), add = "mean_se", sort.val = "none")

# 1 week data, main effect treatment method
ggbarplot(data = wk4data_1wk, x = "TreatmentMethod", y = "PercentGerminationWeek4", 
          fill = "lightgray", title = "Germination Rate by Treatment Method in 1-Week Old Seeds", 
          xlab = "Seed Treatment", ylab = "Percent", ylim = c(0,100), add = "mean_se", sort.val = "none")

# 1 month data, main effect treatment method, backtransformed
ggbarplot(data = wk4data_1mo, x = "TreatmentMethod", y = "PercentGerminationWeek4", 
          fill = "lightgray", title = "Germination Rate by Treatment Method in 1-Month Old Seeds", 
          xlab = "Seed Treatment", ylab = "Percent", ylim = c(0,100), add = "mean_se", sort.val = "none")

# 1 week data, interaction effect
# concatenate Extraction Method and Treatment Method
wk4data_1wk$IntMethod = paste(wk4data_1wk$ExtractionMethod, wk4data_1wk$TreatmentMethod)
colnames(wk4data_1wk)

ggbarplot(data = wk4data_1wk, x = "IntMethod", 
          y = "PercentGerminationWeek4",
          add = "mean_se", fill = "lightgray", 
          sort.by.groups = TRUE, x.text.angle = 90,
          title = "One Week Interaction Effects",
          xlab = "Extraction and Seed Treatment Method", 
          ylab = "Percent", ylim = c(0,100))

# 1 month data, interaction effect, backtransformed
# concatenate Extraction Method and Treatment Method
wk4data_1mo$IntMethod = paste(wk4data_1mo$ExtractionMethod, wk4data_1mo$TreatmentMethod)
colnames(wk4data_1mo)

ggbarplot(data = wk4data_1mo, x = "IntMethod", 
          y = "PercentGerminationWeek4",
          add = "mean_se", fill = "lightgray", 
          sort.by.groups = TRUE, x.text.angle = 90,
          title = "One Month Interaction Effects",
          xlab = "Extraction and Seed Treatment Method", 
          ylab = "Percent", ylim = c(0,100))




# paired t-test for changes in time
wk4paireddata <- read.csv("time-factor.csv")

colnames(wk4paireddata)

# Transform into long data: 
# gather all response variables into a single column

# response variables = raw data
wk4paired_long <- wk4paireddata %>%
  gather(key = "group", value = "responseVariables", onewk_PercentGerminationWeek4, onemo_PercentageGerminationWeek4)

head(wk4paired_long)
colnames(wk4paired_long)

# Shapiro-Wilk test for normality
# using raw data (not transformed)
d  <- with(wk4paired_long, 
           responseVariables[group == "onewk_PercentGerminationWeek4"] - responseVariables[group == "onemo_PercentageGerminationWeek4"])
shapiro.test(d)

# Levene's test for equality of variance
library(car)
leveneTest(wk4paired_long$responseVariables ~ wk4paired_long$group)


# rows extracted for comparisons
unique(wk4paired_long$CombinedMethods)

#WaterWater
prdf_WW <- wk4paired_long[wk4paired_long$CombinedMethods == "WaterWater", ]
prdf_WW

#WaterGa
prdf_WG <- wk4paired_long[wk4paired_long$CombinedMethods == "WaterGA3", ]
prdf_WG

#WaterBleach
prdf_WB <- wk4paired_long[wk4paired_long$CombinedMethods == "WaterBleach", ]
prdf_WB

#YeastWater
prdf_YW <- wk4paired_long[wk4paired_long$CombinedMethods == "YeastWater", ]
prdf_YW

#YeastGa
prdf_YG <- wk4paired_long[wk4paired_long$CombinedMethods == "YeastGA3", ]
prdf_YG

#YeastBleach
prdf_YB <- wk4paired_long[wk4paired_long$CombinedMethods == "YeastBleach", ]
prdf_YB

#HCLWater
prdf_HW <- wk4paired_long[wk4paired_long$CombinedMethods == "HCLWater", ]
prdf_HW

#HCLGa
prdf_HG <- wk4paired_long[wk4paired_long$CombinedMethods == "HCLGA3", ]
prdf_HG

#HCLBleach
prdf_HB <- wk4paired_long[wk4paired_long$CombinedMethods == "HCLBleach", ]
prdf_HB



# t-tests
resWW <- t.test(responseVariables ~ group, data = prdf_WW, paired = TRUE, alternative = "less")
resWW

prdf_WW %>%
  group_by(group) %>%
  get_summary_stats(responseVariables, type = "mean_sd")

resWG <- t.test(responseVariables ~ group, data = prdf_WG, paired = TRUE, alternative = "less")
resWG

prdf_WG %>%
  group_by(group) %>%
  get_summary_stats(responseVariables, type = "mean_sd")

resWB <- t.test(responseVariables ~ group, data = prdf_WB, paired = TRUE, alternative = "less")
resWB

prdf_WB %>%
  group_by(group) %>%
  get_summary_stats(responseVariables, type = "mean_sd")

resYW <- t.test(responseVariables ~ group, data = prdf_YW, paired = TRUE, alternative = "less")
resYW

prdf_YW %>%
  group_by(group) %>%
  get_summary_stats(responseVariables, type = "mean_sd")

resYG <- t.test(responseVariables ~ group, data = prdf_YG, paired = TRUE, alternative = "less")
resYG

prdf_YG %>%
  group_by(group) %>%
  get_summary_stats(responseVariables, type = "mean_sd")

resYB <- t.test(responseVariables ~ group, data = prdf_YB, paired = TRUE, alternative = "less")
resYB

prdf_YB %>%
  group_by(group) %>%
  get_summary_stats(responseVariables, type = "mean_sd")

resHW <- t.test(responseVariables ~ group, data = prdf_HW, paired = TRUE, alternative = "less")
resHW

prdf_HW %>%
  group_by(group) %>%
  get_summary_stats(responseVariables, type = "mean_sd")

resHG <- t.test(responseVariables ~ group, data = prdf_HG, paired = TRUE, alternative = "less")
resHG

prdf_HG %>%
  group_by(group) %>%
  get_summary_stats(responseVariables, type = "mean_sd")

resHB <- t.test(responseVariables ~ group, data = prdf_HB, paired = TRUE, alternative = "less")
resHB

prdf_HB %>%
  group_by(group) %>%
  get_summary_stats(responseVariables, type = "mean_sd")



# Main effects
# Extraction method
prdf_WaterE <- wk4paired_long[wk4paired_long$ExtractionMethod == "Water", ]
resWaterE <- t.test(responseVariables ~ group, data = prdf_WaterE, paired = TRUE, alternative = "less")
resWaterE

prdf_WaterE %>%
  group_by(group) %>%
  get_summary_stats(responseVariables, type = "mean_sd")

prdf_Yeast <- wk4paired_long[wk4paired_long$ExtractionMethod == "Yeast", ]
resYeast <- t.test(responseVariables ~ group, data = prdf_Yeast, paired = TRUE, alternative = "less")
resYeast

prdf_Yeast %>%
  group_by(group) %>%
  get_summary_stats(responseVariables, type = "mean_sd")

prdf_HCL <- wk4paired_long[wk4paired_long$ExtractionMethod == "HCL", ]
resHCL <- t.test(responseVariables ~ group, data = prdf_HCL, paired = TRUE, alternative = "less")
resHCL

prdf_HCL %>%
  group_by(group) %>%
  get_summary_stats(responseVariables, type = "mean_sd")

# Treatment method
prdf_WaterT <- wk4paired_long[wk4paired_long$TreatmentMethod == "Water", ]
resWaterT <- t.test(responseVariables ~ group, data = prdf_WaterT, paired = TRUE, alternative = "less")
resWaterT

prdf_WaterT %>%
  group_by(group) %>%
  get_summary_stats(responseVariables, type = "mean_sd")

prdf_Ga <- wk4paired_long[wk4paired_long$TreatmentMethod == "GA3", ]
resGa <- t.test(responseVariables ~ group, data = prdf_Ga, paired = TRUE, alternative = "less")
resGa

prdf_Ga %>%
  group_by(group) %>%
  get_summary_stats(responseVariables, type = "mean_sd")

prdf_Bleach <- wk4paired_long[wk4paired_long$TreatmentMethod == "Bleach", ]
resBleach <- t.test(responseVariables ~ group, data = prdf_Bleach, paired = TRUE, alternative = "less")
resBleach

prdf_Bleach %>%
  group_by(group) %>%
  get_summary_stats(responseVariables, type = "mean_sd")

